plugins {
    id "java"
    id "com.github.johnrengelman.shadow" version "6.1.0"
    id "net.minecraftforge.gradle.forge" version "ddb1eb0"
    id "org.jetbrains.kotlin.jvm" version "1.6.0"
}

version = "1.0.0"
group = "net.wyvest"
archivesBaseName = "Skin Downloader"

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8
compileJava.options.encoding = "UTF-8"

minecraft {
    version = "1.8.9-11.15.1.2318-1.8.9"
    runDir = "run"
    mappings = "stable_22"
    makeObfSourceJar = false

    clientRunArgs += '--tweakClass gg.essential.loader.stage0.EssentialSetupTweaker'
}

configurations {
    // Creates an extra configuration that implements `implementation` to be used later as the configuration that shades libraries
    include
    implementation.extendsFrom(include)
}

dependencies {
    include ('gg.essential:loader-launchwrapper:1.1.2') {
        transitive = false
    }
    implementation('gg.essential:essential-1.8.9-forge:1576+release-launch')
}

/**
 * This task simply replaces the `${version}` and `${mcversion}` properties in the mcmod.info with the data from Gradle
 */
processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include "mcmod.info"

        // replace version and mcversion
        expand "version": project.version, "mcversion": project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude "mcmod.info"
    }
    rename '(.+_at.cfg)', 'META-INF/$1'
}


/**
 * This task simply moves resources so they can be accessed at runtime, Forge is quite weird isn"t it
 */
task moveResources {
    doLast {
        ant.move file: "${buildDir}/resources/main",
            todir: "${buildDir}/classes/java"
    }
}

moveResources.dependsOn processResources
classes.dependsOn moveResources

// This forces the build task to run shadowJar after
tasks.reobfJar.dependsOn(tasks.shadowJar)

jar {
    manifest.attributes(
            "ModSide": "CLIENT",
            "ForceLoadAsMod": true,
            'FMLAT': 'skindownloader_at.cfg',
            'TweakClass': 'gg.essential.loader.stage0.EssentialSetupTweaker',
            'TweakOrder': '0'
    )

    enabled = false
}

// This adds support to ("embed", "shade", "include") libraries into our JAR
shadowJar {
    archiveClassifier.set("")
    configurations = [project.configurations.include]
    duplicatesStrategy DuplicatesStrategy.EXCLUDE


    exclude 'META-INF', 'META-INF/**'
    exclude 'org/jetbrains/annotations', 'org/jetbrains/annotations/**'
}
repositories {
    mavenCentral()
    mavenLocal()
    maven {
        name = 'Sk1erLLC'
        url = 'https://repo.sk1er.club/repository/maven-releases/'
    }
    maven {
        name = 'Jitpack'
        url = 'https://jitpack.io/'
    }
    maven {
        name = 'Spongepowered'
        url = 'https://repo.spongepowered.org/repository/maven-public/'
    }
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
